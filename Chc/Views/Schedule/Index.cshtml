@model ChcObjects.Scheduling

@{
    ViewBag.Title = "Scheduling";
}

<h2>Scheduling</h2>

@*@(Html.Kendo().Scheduler<Kendo.Mvc.Examples.Models.Scheduler.TaskViewModel>()
    .Name("eventscheduler")
    .Date(DateTime.Now)
    .StartTime(DateTime.Now.Date.AddDays(-1))
    .Height(600)
    .Views(views =>
    {
        views.DayView();
        views.WorkWeekView(workWeekView => workWeekView.Selected(true));
        views.WeekView();
        views.MonthView();
        views.AgendaView();
        views.TimelineView();
    })
    .Timezone("Europe/London")
    //.Resources(resource =>
    //{
    //    resource.Add(m => m.OwnerID)
    //        .Title("Owner")
    //        .DataTextField("Text")
    //        .DataValueField("Value")
    //        .DataColorField("Color")
    //        .BindTo(new[] {
    //            new { Text = "Alex", Value = 1, Color = "#f8a398" } ,
    //            new { Text = "Bob", Value = 2, Color = "#51a0ed" } ,
    //            new { Text = "Charlie", Value = 3, Color = "#56ca85" }
    //        });
    //})
    .DataSource(d => d
        .Model(m =>
        {
            m.Id(f => f.TaskID);
            m.Field(f => f.Title).DefaultValue("No title");
            m.Field(f => f.OwnerID).DefaultValue(1);
            m.Field(f => f.Title).DefaultValue("No title");
            m.RecurrenceId(f => f.RecurrenceID);
        })
        .Read("Read", "Schedule")
        .Create("Create", "Schedule")
        .Destroy("Destroy", "Schedule")
        .Update("Update", "Schedule")
        .Filter(filters =>
        {
            filters.Add(model => model.OwnerID).IsEqualTo(1).Or().IsEqualTo(2);
        })
    )
)*@